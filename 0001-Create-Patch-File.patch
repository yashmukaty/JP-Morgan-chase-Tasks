From 175f19601e853b21a79e90a22fa89fac78d1902e Mon Sep 17 00:00:00 2001
From: Achal <yashmukaty1@gmail.com>
Date: Sat, 9 May 2020 19:44:30 +0530
Subject: [PATCH] Create Patch File

---
 src/App.tsx   | 16 +++++++++++++---
 src/Graph.tsx | 15 ++++++++++++---
 2 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..7620005 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph:boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph:false,
     };
   }
 
@@ -29,19 +31,27 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if(this.state.showGraph) {
+      return (<Graph data={this.state.data}/>)}
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
+    let x = 0;
+    const interval = setInterval(() => {
     DataStreamer.getData((serverResponds: ServerRespond[]) => {
       // Update the state by creating a new array of data that consists of
       // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
+      this.setState({data: serverResponds, showGraph: true,});
     });
-  }
+    x++;
+    if(x>1000){
+      clearInterval(interval);
+    }
+  },100);
+}
 
   /**
    * Render the App react component
diff --git a/src/Graph.tsx b/src/Graph.tsx
index ec1430e..e0ed2bd 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement {
   load: (table: Table) => void,
 }
 
@@ -32,8 +32,17 @@ class Graph extends Component<IProps, {}> {
 
   componentDidMount() {
     // Get element to attach the table from the DOM.
-    const elem: PerspectiveViewerElement = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
-
+    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
+    elem.setAttribute('view','y_line');
+    elem.setAttribute('column-pivots','["stock"]');
+    elem.setAttribute('row-pivots','["timestamp"]');
+    elem.setAttribute('columns','["top_ask_price"]');
+    elem.setAttribute('aggregates', ` 
+                      {"stock":"distinct count",
+                      "top_ask_price":"avg",
+                      "top_bid_price":"avg",
+                      "timsetamp":"distinct count"}`);
+                                      
     const schema = {
       stock: 'string',
       top_ask_price: 'float',
-- 
2.20.1 (Apple Git-117)

